<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.woniuticket.cinema.dao.FilmCommentMapper">

  <select id="selectFilmCommentsByFilmCommentId" resultMap="BaseResultMap">
    select * from film_comment where film_id =#{filmId}
  </select>

  <resultMap id="BaseResultMap" type="com.woniu.woniuticket.cinema.pojo.FilmComment">
    <id column="film_comment_id" jdbcType="INTEGER" property="filmCommentId" />
    <result column="film_id" jdbcType="INTEGER" property="filmId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="comment_status" jdbcType="INTEGER" property="commentStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    film_comment_id, film_id, content, comment_time, nick_name, comment_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from film_comment
    where film_comment_id = #{filmCommentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from film_comment
    where film_comment_id = #{filmCommentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.woniu.woniuticket.cinema.pojo.FilmComment">
    insert into film_comment (film_comment_id, film_id, content, 
      comment_time, nick_name, comment_status
      )
    values (#{filmCommentId,jdbcType=INTEGER}, #{filmId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{commentTime,jdbcType=TIMESTAMP}, #{nickName,jdbcType=VARCHAR}, #{commentStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.woniuticket.cinema.pojo.FilmComment">
    insert into film_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="filmCommentId != null">
        film_comment_id,
      </if>
      <if test="filmId != null">
        film_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="commentStatus != null">
        comment_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="filmCommentId != null">
        #{filmCommentId,jdbcType=INTEGER},
      </if>
      <if test="filmId != null">
        #{filmId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null">
        #{commentStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.woniuticket.cinema.pojo.FilmComment">
    update film_comment
    <set>
      <if test="filmId != null">
        film_id = #{filmId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null">
        comment_status = #{commentStatus,jdbcType=INTEGER},
      </if>
    </set>
    where film_comment_id = #{filmCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.woniuticket.cinema.pojo.FilmComment">
    update film_comment
    set film_id = #{filmId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      nick_name = #{nickName,jdbcType=VARCHAR},
      comment_status = #{commentStatus,jdbcType=INTEGER}
    where film_comment_id = #{filmCommentId,jdbcType=INTEGER}
  </update>
</mapper>